## 変数の受け渡しについて

### 変数の実態
変数の実態は、メモリ領域。  
変数を定義すると、その変数は空いているメモリ上のどこかに記憶される。  
定義した変数を呼び出す時は、毎回その変数を記憶してるメモリ番号を呼び出している。　　

### 変数の渡し方
変数の渡し方には、2通りある。  
・値渡し...メモリに記憶してる値をコピーして、別のメモリに保存する方法  
・参照渡し...値を記憶してるメモリ番号を渡す方法。

### 参照渡しの注意点
```
a = 3
b = a
puts b #=> 3

#　この時に、b = 5とすると...
puts a #=> 5
```

### なぜか？
`b = a`は参照渡しなので、変数bに格納されているのは3という値ではなく、変数aが値を保持しているメモリの番号。  
`b = 5`では、変数aから渡されたメモリ番号にアクセスして、そこに記憶されている値に5を代入しているので、変数aも影響を受けてしまう。  
このように、変数の参照渡しをする場合は、注意が必要。
